C++中的std::mutex类提供了以下几个常用的方法：

lock(): 锁定互斥量。如果互斥量已经被其他线程锁定，则当前线程将被阻塞，直到互斥量被解锁。如果在已经锁定互斥量的线程中再次调用lock()，将导致未定义的行为。

unlock(): 解锁互斥量。只有锁定互斥量的线程才能解锁它。在未锁定互斥量的情况下调用unlock()，将导致未定义的行为。

try_lock(): 尝试锁定互斥量。如果互斥量已经被其他线程锁定，则不会阻塞当前线程，而是立即返回false。如果成功锁定互斥量，则返回true。

这些方法通常不直接使用，而是通过std::lock_guard或std::unique_lock等RAII封装进行管理，以确保在异常或提前返回的情况下能够正确解锁互斥量