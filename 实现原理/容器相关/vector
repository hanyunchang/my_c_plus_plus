
vector是C++标准模板库(STL)中的一个动态数组模板类，它能够根据需要自动调整自己的大小。

vector内部主要由三个指针组成：
1. start：指向数组（动态分配的）的开始位置，也就是数组内存空间的首地址。
2. finish：指向数组中最后一个元素之后的位置，它之前的位置是可以直接使用的内存空间。
3. end_of_storage：指向数组中可以使用的内存空间的尾部，也就是已经分配的内存空间的尾地址。

vector的实现原理主要是通过动态分配内存和内存拷贝来完成的。当我们向vector中添加元素时，如果当前的内存空间足够，就直接添加；如果当前的内存空间不足，vector就会重新分配一块更大的内存空间，然后将原来的元素复制到新的内存空间，再添加新的元素。

这个新分配的内存空间通常是原来内存空间的两倍，这样做的目的是为了提高内存的使用效率，避免频繁地进行内存分配和释放操作。这也就是为什么在知道元素数量的情况下，使用reserve函数预分配内存会更加高效。

vector提供了许多成员函数，包括插入、删除、查找、遍历等操作，这使得vector非常灵活和方便。